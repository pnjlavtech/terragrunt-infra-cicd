name: 'Terragrunt GitHub Actions'
on:
  push:
    branches:
      - "main"



env:
  AWS_ACCOUNT_ID: ${{ secrets.AWS_ACCOUNT_ID }}
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  GH_PAT: ${{ secrets.GH_PAT }}
  tg_version: '0.53.2'
  tf_version: '1.5.7'
  TF_PLUGIN_CACHE_DIR: ${{ github.workspace }}/.terraform.d/plugin-cache
  working_dir: './non-prod/us-west-2/qa/vpc'
  # IS_GH: “TRUE”


jobs:
  # checks:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: 'Checkout'
  #       uses: actions/checkout@main

  #     - name: Check terragrunt HCL
  #       uses: gruntwork-io/terragrunt-action@v2
  #       with:
  #         tf_version: ${{ env.tf_version }}
  #         tg_version: ${{ env.tg_version }}
  #         tg_dir: ${{ env.working_dir }}
  #         tg_command: 'hclfmt --terragrunt-check --terragrunt-diff'

  tflint:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout source code
      uses: actions/checkout@v4

    - name: Create Terraform Plugin Cache Dir
      run: mkdir -p $TF_PLUGIN_CACHE_DIR

    - name: Terraform Plugin Cache
      uses: actions/cache@v4.0.1
      with:
        path: ${{ env.TF_PLUGIN_CACHE_DIR }}
        key: ${{ runner.os }}-terraform-plugin-cache-${{ hashFiles('**/.terraform.lock.hcl') }}

    - name: Setup TFLint
      uses: terraform-linters/setup-tflint@v4
      with:
        tflint_version: v0.50.3
        # github_token: ${{ secrets.MY_CUSTOM_GITHUB_TOKEN }}

    - name: Show version
      run: tflint --version

    - name: Init TFLint
      run: tflint --init
      env:
        # https://github.com/terraform-linters/tflint/blob/master/docs/user-guide/plugins.md#avoiding-rate-limiting
        GITHUB_TOKEN: ${{ env.GH_PAT }}

    - name: Run TFLint
      run: tflint -f compact
      # env:
      #   # https://github.com/terraform-linters/tflint/blob/master/docs/user-guide/plugins.md#avoiding-rate-limiting
      #   GITHUB_TOKEN: ${{ env.GH_PAT }}



  plan:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@main

      # - name: Create Terraform Plugin Cache Dir
      #   run: mkdir -p $TF_PLUGIN_CACHE_DIR

      - name: Terraform Plugin Cache
        uses: actions/cache@v4.0.1
        with:
          path: ${{ env.TF_PLUGIN_CACHE_DIR }}
          key: ${{ runner.os }}-terraform-plugin-cache-${{ hashFiles('**/.terraform.lock.hcl') }}

      - name: Plan
        uses: gruntwork-io/terragrunt-action@v2
        env:
          AWS_ACCOUNT_ID: ${{ env.AWS_ACCOUNT_ID }} 
          TF_PLUGIN_CACHE_DIR: /github/workspace/.terraform.d/plugin-cache
          # configure git to use custom token to clone repository.
          # INPUT_PRE_EXEC_1: |
          #   git config --global url."https://jazzlyj:${{secrets.GH_PAT}}@github.com".insteadOf "https://github.com"
          # # print git configuration
          # INPUT_PRE_EXEC_2: |
          #   git config --global --list
        with:
          tf_version: ${{ env.tf_version }}
          tg_version: ${{ env.tg_version }}
          tg_dir: ${{ env.working_dir }}
          tg_command: plan



  # deploy:
  #   runs-on: ubuntu-latest
  #   needs: [ plan ]
  #   environment: 'non-prod'
  #   if: github.ref == 'refs/heads/main'
  #   steps:
  #     - name: 'Checkout'
  #       uses: actions/checkout@main

  #     - name: Deploy
  #       uses: gruntwork-io/terragrunt-action@v2
  #       with:
  #         tf_version: ${{ env.tf_version }}
  #         tg_version: ${{ env.tg_version }}
  #         tg_dir: ${{ env.working_dir }}
  #         tg_command: 'apply'
